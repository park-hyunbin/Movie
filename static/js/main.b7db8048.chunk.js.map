{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","_ref","id","coverImg","title","summary","React","createElement","src","alt","Link","to","concat","Home","loading","setLoading","useState","movies","setMovies","useEffect","async","response","fetch","data","json","error","console","getMovies","map","movie","key","medium_cover_image","Detail","useParams","log","getMovie","App","Router","basename","process","Switch","Route","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mNAuBeA,MAnBf,SAAcC,GAAoC,IAAnC,GAAEC,EAAE,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,GAASJ,EAC7C,OACEK,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,IAAKL,EAAUM,IAAKL,IACzBE,IAAAC,cAAA,UACED,IAAAC,cAACG,IAAI,CAACC,GAAE,UAAAC,OAAYV,IAAOE,IAE7BE,IAAAC,cAAA,SAAIF,KCmCKQ,MA3Cf,WACE,MAAOC,EAASC,GAAcC,oBAAS,IAChCC,EAAQC,GAAaF,mBAAS,IAoBrC,OAJAG,oBAAU,KAdQC,WAChB,IACE,MAAMC,QAAiBC,MACrB,wEAEIC,QAAaF,EAASG,OAC5BN,EAAUK,EAAKA,KAAKN,QACpBF,GAAW,GACX,MAAOU,GACPC,QAAQD,MAAM,yBAA0BA,GACxCV,GAAW,KAKbY,IACC,IAGDrB,IAAAC,cAAA,WACGO,EACCR,IAAAC,cAAA,UAAI,cAEJD,IAAAC,cAAA,WACGU,EAAOW,IAAKC,GACXvB,IAAAC,cAACP,EAAK,CACJ8B,IAAKD,EAAM3B,GACXA,GAAI2B,EAAM3B,GACVC,SAAU0B,EAAME,mBAChB3B,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,c,OCjBd2B,MAjBf,WACI,MAAM,GAAE9B,GAAO+B,cAaf,OAJAd,oBAAU,KAPOC,WACb,MAAMI,cACIF,MAAM,qDAADV,OAAsDV,KACnEsB,OACFE,QAAQQ,IAAIV,IAIZW,IACD,CAACjC,IAEGI,IAAAC,cAAA,UAAI,WCGA6B,MAff,WACE,OACE9B,IAAAC,cAAC8B,IAAM,CAACC,SAAUC,UAChBjC,IAAAC,cAACiC,IAAM,KACLlC,IAAAC,cAACkC,IAAK,CAACC,KAAK,cACVpC,IAAAC,cAACyB,EAAM,OAET1B,IAAAC,cAACkC,IAAK,CAACC,KAAK,KACVpC,IAAAC,cAACM,EAAI,UCDA8B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK7C,IAAkD,IAAjD,OAAE8C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlD,EACpE8C,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAAC6B,EAAG,QAORO,M","file":"static/js/main.b7db8048.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Movie({ id, coverImg, title, summary }) {\r\n  return (\r\n    <div>\r\n      <img src={coverImg} alt={title} />\r\n      <h2>\r\n        <Link to={`/movie/${id}`}>{title}</Link>\r\n      </h2>\r\n      <p>{summary}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  coverImg: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import Movie from \"../components/Movie\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Home(){\r\n  const [loading, setLoading] = useState(true);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getMovies = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        'https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year'\r\n      );\r\n      const data = await response.json();\r\n      setMovies(data.data.movies);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching movies:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <div>\r\n          {movies.map((movie) => (\r\n            <Movie\r\n              key={movie.id}\r\n              id={movie.id} \r\n              coverImg={movie.medium_cover_image}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Detail() {\r\n    const { id } = useParams();\r\n\r\n    const getMovie = async () => {\r\n        const json = await (\r\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\r\n        ).json();\r\n        console.log(json);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovie();\r\n    }, [id]);\r\n\r\n    return <h1>Detail</h1>;\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/movie/:id\">\n          <Detail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}